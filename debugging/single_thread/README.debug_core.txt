
CONFIG
------
sre@cpp:~/debugging/build$ vi ../CMakeLists.txt 
sre@cpp:~/debugging/build$ cat ../CMakeLists.txt 
cmake_minimum_required(VERSION 3.28)set(CMAKE_TOOLCHAIN_FILE "/home/sre/package_manager/vcpkg/scripts/buildsystems/vcpkg.cmake" CACHE STRING "Vcpkg toolchain file")project(MyProject)set(CMAKE_CXX_STANDARD 11)
set(CMAKE_CXX_STANDARD_REQUIRED ON)
set(CMAKE_CXX_EXTENSIONS OFF)
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR})
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY_DEBUG ${CMAKE_BINARY_DIR})
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY_RELEASE ${CMAKE_BINARY_DIR})
set(CMAKE_BUILD_TYPE Debug)find_package(Boost 1.89.0 COMPONENTS filesystem REQUIRED)
add_executable(main crash.cpp)
target_link_libraries(main PRIVATE Boost::filesystem)

DISABLE 
-------
sre@cpp:~/debugging/build$ sre@cpp:~/debugging/build$ ulimit -c
unlimited
sre@cpp:~/debugging/build$ sudo systemctl stop apport.service
sre@cpp:~/debugging/build$ sudo sysctl -w kernel.core_pattern=core.%p
kernel.core_pattern = core.%p

TRIGGER
-------
sre@cpp:~/debugging/build$ ./main
About to dereference a null pointer...
Segmentation fault (core dumped)

sre@cpp:~/debugging/build$ ls -l
total 300
-rw-rw-r-- 1 sre sre  23472 Oct  7 17:40 CMakeCache.txt
drwxrwxr-x 5 sre sre   4096 Oct  7 19:14 CMakeFiles
-rw-rw-r-- 1 sre sre   1619 Oct  7 17:40 cmake_install.cmake
-rw------- 1 sre sre 524288 Oct  7 19:16 core.186102
-rwxrwxr-x 1 sre sre  86024 Oct  7 19:12 main
-rw-rw-r-- 1 sre sre   5073 Oct  7 19:14 Makefile

DEBUG
-----
sre@cpp:~/debugging/build$ gdb ./main ./core.186102 
GNU gdb (Ubuntu 15.0.50.20240403-0ubuntu1) 15.0.50.20240403-git
Copyright (C) 2024 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "aarch64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<https://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from ./main...
[New LWP 186102]This GDB supports auto-downloading debuginfo from the following URLs:
  <https://debuginfod.ubuntu.com>
Enable debuginfod for this session? (y or [n]) y
Debuginfod has been enabled.
To make this setting permanent, add 'set debuginfod enabled on' to .gdbinit.
Downloading separate debug info for system-supplied DSO at 0xfebecfccb000
[Thread debugging using libthread_db enabled]                                                                                                                          
Using host libthread_db library "/lib/aarch64-linux-gnu/libthread_db.so.1".
Core was generated by `./main'.
Program terminated with signal SIGSEGV, Segmentation fault.
#0  0x0000b94a0119094c in main () at /home/sre/debugging/crash.cpp:6
6	    *ptr = 42; // This will cause a segmentation fault
(gdb) print ptr
$1 = (int *) 0x0
(gdb) print &ptr
$2 = (int **) 0xfffffb8aea28
(gdb) print *ptr
Cannot access memory at address 0x0
(gdb) quit
sre@cpp:~/debugging/build$

==============================================================================

sre@cpp:~/debugging/build$ gdb ./main
GNU gdb (Ubuntu 15.0.50.20240403-0ubuntu1) 15.0.50.20240403-git
Copyright (C) 2024 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "aarch64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<https://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from ./main...
(gdb) run
Starting program: /home/sre/debugging/build/main This GDB supports auto-downloading debuginfo from the following URLs:
  <https://debuginfod.ubuntu.com>
Enable debuginfod for this session? (y or [n]) y
Debuginfod has been enabled.
To make this setting permanent, add 'set debuginfod enabled on' to .gdbinit.
Downloading separate debug info for system-supplied DSO at 0xfffff7ffb000
[Thread debugging using libthread_db enabled]                                                                                                                      
Using host libthread_db library "/lib/aarch64-linux-gnu/libthread_db.so.1".
Scan success: true
Directory count: 0
File count: 5
Last error: Scan completed successfully
Files created: /tmp/test/file0.txt /tmp/test/file1.txt /tmp/test/file2.txt /tmp/test/file3.txt /tmp/test/file4.txt 
[Inferior 1 (process 186460) exited normally]
(gdb) bt full
No stack.
(gdb) list
39	        }
40	    }
41	
42	    int getDirCount() const { return dir_count_; }
43	    int getFileCount() const { return file_count_; }
44	    std::string getLastError() const { return last_error_; }
45	
46	private:
47	    std::string base_path_;
48	    int dir_count_;
(gdb) info threads
No threads.
(gdb) disassemble main
Dump of assembler code for function main():
   0x0000aaaaaaaa5118 <+0>:	stp	x29, x30, [sp, #-48]!
   0x0000aaaaaaaa511c <+4>:	mov	x29, sp
   0x0000aaaaaaaa5120 <+8>:	stp	x19, x20, [sp, #16]
   0x0000aaaaaaaa5124 <+12>:	str	x21, [sp, #32]
   0x0000aaaaaaaa5128 <+16>:	sub	sp, sp, #0x320
   0x0000aaaaaaaa512c <+20>:	adrp	x0, 0xaaaaaaadf000
   0x0000aaaaaaaa5130 <+24>:	ldr	x0, [x0, #3992]
   0x0000aaaaaaaa5134 <+28>:	ldr	x1, [x0]
   0x0000aaaaaaaa5138 <+32>:	str	x1, [sp, #792]
   0x0000aaaaaaaa513c <+36>:	mov	x1, #0x0                   	// #0
   0x0000aaaaaaaa5140 <+40>:	add	x0, sp, #0x58
   0x0000aaaaaaaa5144 <+44>:	str	x0, [sp, #56]
   0x0000aaaaaaaa5148 <+48>:	nop
   0x0000aaaaaaaa514c <+52>:	nop
   0x0000aaaaaaaa5150 <+56>:	add	x0, sp, #0x58
   0x0000aaaaaaaa5154 <+60>:	add	x3, sp, #0x70
   0x0000aaaaaaaa5158 <+64>:	mov	x2, x0
   0x0000aaaaaaaa515c <+68>:	adrp	x0, 0xaaaaaaac1000 <boost::filesystem::detail::(anonymous namespace)::fill_random_dev_random(void*, std::size_t)+540>
   0x0000aaaaaaaa5160 <+72>:	add	x1, x0, #0xc90
   0x0000aaaaaaaa5164 <+76>:	mov	x0, x3
   0x0000aaaaaaaa5168 <+80>:	bl	0xaaaaaaaa4ca0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_@plt>
   0x0000aaaaaaaa516c <+84>:	add	x0, sp, #0x58
--Type <RET> for more, q to quit, c to continue without paging--q
Quit
(gdb) quit

==================================================================


sre@cpp:~/debugging/build$ rm core.186510 
sre@cpp:~/debugging/build$ rm main
sre@cpp:~/debugging/build$ vi ../main.cpp 
sre@cpp:~/debugging/build$ cmake -Wno-dev ..
-- Configuring done (0.0s)
-- Generating done (0.0s)
-- Build files have been written to: /home/sre/debugging/build
sre@cpp:~/debugging/build$ cmake --build .
[ 50%] Building CXX object CMakeFiles/main.dir/main.cpp.o
[100%] Linking CXX executable main
[100%] Built target main
sre@cpp:~/debugging/build$ ls -l 
total 1204
-rw-rw-r-- 1 sre sre   23472 Oct  7 17:40 CMakeCache.txt
drwxrwxr-x 5 sre sre    4096 Oct  7 20:33 CMakeFiles
-rw-rw-r-- 1 sre sre    1619 Oct  7 17:40 cmake_install.cmake
-rwxrwxr-x 1 sre sre 1192720 Oct  7 20:33 main
-rw-rw-r-- 1 sre sre    5052 Oct  7 20:33 Makefile
sre@cpp:~/debugging/build$ ./main
Segmentation fault (core dumped)
sre@cpp:~/debugging/build$ ls -l 
total 1436
-rw-rw-r-- 1 sre sre   23472 Oct  7 17:40 CMakeCache.txt
drwxrwxr-x 5 sre sre    4096 Oct  7 20:33 CMakeFiles
-rw-rw-r-- 1 sre sre    1619 Oct  7 17:40 cmake_install.cmake
-rw------- 1 sre sre  524288 Oct  7 20:33 core.186598
-rwxrwxr-x 1 sre sre 1192720 Oct  7 20:33 main
-rw-rw-r-- 1 sre sre    5052 Oct  7 20:33 Makefile
sre@cpp:~/debugging/build$ gdb ./main ./core.186598 
GNU gdb (Ubuntu 15.0.50.20240403-0ubuntu1) 15.0.50.20240403-git
Copyright (C) 2024 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "aarch64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<https://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from ./main...
[New LWP 186598]

This GDB supports auto-downloading debuginfo from the following URLs:
  <https://debuginfod.ubuntu.com>
Enable debuginfod for this session? (y or [n]) y
Debuginfod has been enabled.
To make this setting permanent, add 'set debuginfod enabled on' to .gdbinit.
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/aarch64-linux-gnu/libthread_db.so.1".
Core was generated by `./main'.
Program terminated with signal SIGSEGV, Segmentation fault.
#0  0x0000b6e90f986cf8 in DirectoryManager::scanDirectory (this=0xffffc00d5b00) at /home/sre/debugging/main.cpp:29
29	            *ptr = 42; // This will cause a segmentation fault
(gdb) bt full
#0  0x0000b6e90f986cf8 in DirectoryManager::scanDirectory (this=0xffffc00d5b00) at /home/sre/debugging/main.cpp:29
        p = {<boost::filesystem::path_detail::path_constants<char, (char)'/', (char)'/', (char)'.'>> = {<No data fields>}, m_pathname = "/tmp/test"}
        ptr = 0x0
#1  0x0000b6e90f985390 in main () at /home/sre/debugging/main.cpp:84
        path = "/tmp/test"
        max_files = 5
        file_list = std::vector of length 5, capacity 8 = {"/tmp/test/file0.txt", "/tmp/test/file1.txt", "/tmp/test/file2.txt", "/tmp/test/file3.txt", 
          "/tmp/test/file4.txt"}
        dir_manager = {base_path_ = "/tmp/test", dir_count_ = 0, file_count_ = 0, last_error_ = ""}
        scan_success = false
(gdb) list
24	                return false;
25	            }
26	
27	            // Intentional crash: dereference a null pointer
28	            int* ptr = nullptr;
29	            *ptr = 42; // This will cause a segmentation fault
30	
31	            for (const auto& entry : boost::filesystem::directory_iterator(p)) {
32	                if (boost::filesystem::is_directory(entry.path())) {
33	                    dir_count_++;
(gdb) info threads
  Id   Target Id                          Frame 
* 1    Thread 0xefda54be4140 (LWP 186598) 0x0000b6e90f986cf8 in DirectoryManager::scanDirectory (this=0xffffc00d5b00) at /home/sre/debugging/main.cpp:29
(gdb) disassemble /r
Dump of assembler code for function _ZN16DirectoryManager13scanDirectoryEv:
   0x0000b6e90f986bf0 <+0>:	d10303ff	sub	sp, sp, #0xc0
   0x0000b6e90f986bf4 <+4>:	a90a7bfd	stp	x29, x30, [sp, #160]
   0x0000b6e90f986bf8 <+8>:	910283fd	add	x29, sp, #0xa0
   0x0000b6e90f986bfc <+12>:	a90b53f3	stp	x19, x20, [sp, #176]
   0x0000b6e90f986c00 <+16>:	f90007e0	str	x0, [sp, #8]
   0x0000b6e90f986c04 <+20>:	b00001c0	adrp	x0, 0xb6e90f9bf000
   0x0000b6e90f986c08 <+24>:	f947cc00	ldr	x0, [x0, #3992]
   0x0000b6e90f986c0c <+28>:	f9400001	ldr	x1, [x0]
   0x0000b6e90f986c10 <+32>:	f9004fe1	str	x1, [sp, #152]
   0x0000b6e90f986c14 <+36>:	d2800001	mov	x1, #0x0                   	// #0
   0x0000b6e90f986c18 <+40>:	f94007e1	ldr	x1, [sp, #8]
   0x0000b6e90f986c1c <+44>:	910163e0	add	x0, sp, #0x58
   0x0000b6e90f986c20 <+48>:	97fffe5b	bl	0xb6e90f98658c <_ZN5boost10filesystem4pathC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
   0x0000b6e90f986c24 <+52>:	910163e0	add	x0, sp, #0x58
   0x0000b6e90f986c28 <+56>:	97ffff6d	bl	0xb6e90f9869dc <_ZN5boost10filesystem6existsERKNS0_4pathE>
   0x0000b6e90f986c2c <+60>:	12001c00	and	w0, w0, #0xff
   0x0000b6e90f986c30 <+64>:	52000000	eor	w0, w0, #0x1
   0x0000b6e90f986c34 <+68>:	12001c00	and	w0, w0, #0xff
   0x0000b6e90f986c38 <+72>:	12000000	and	w0, w0, #0x1
   0x0000b6e90f986c3c <+76>:	7100001f	cmp	w0, #0x0
   0x0000b6e90f986c40 <+80>:	54000240	b.eq	0xb6e90f986c88 <_ZN16DirectoryManager13scanDirectoryEv+152>  // b.none
   0x0000b6e90f986c44 <+84>:	f94007e0	ldr	x0, [sp, #8]
   0x0000b6e90f986c48 <+88>:	9100a013	add	x19, x0, #0x28
   0x0000b6e90f986c4c <+92>:	f94007e0	ldr	x0, [sp, #8]
   0x0000b6e90f986c50 <+96>:	9101e3e1	add	x1, sp, #0x78
   0x0000b6e90f986c54 <+100>:	aa0103e8	mov	x8, x1
   0x0000b6e90f986c58 <+104>:	aa0003e1	mov	x1, x0
   0x0000b6e90f986c5c <+108>:	900000e0	adrp	x0, 0xb6e90f9a2000 <boost::filesystem::detail::(anonymous namespace)::fill_random_dev_random(void*, std::size_t)+524>
   0x0000b6e90f986c60 <+112>:	9130e000	add	x0, x0, #0xc38
   0x0000b6e90f986c64 <+116>:	94000236	bl	0xb6e90f98753c <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_>
   0x0000b6e90f986c68 <+120>:	9101e3e0	add	x0, sp, #0x78
--Type <RET> for more, q to quit, c to continue without paging--q
Quit
(gdb) print ptr
$1 = (int *) 0x0
(gdb) print &ptr
$2 = (int **) 0xffffc00d5960
(gdb) quit
sre@cpp:~/debugging/build$ 

================================================================


sre@cpp:~/debugging/build$ gdb ./main ./core.186598 
GNU gdb (Ubuntu 15.0.50.20240403-0ubuntu1) 15.0.50.20240403-git
Copyright (C) 2024 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "aarch64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<https://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from ./main...
[New LWP 186598]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/aarch64-linux-gnu/libthread_db.so.1".
Core was generated by `./main'.
Program terminated with signal SIGSEGV, Segmentation fault.
#0  0x0000b6e90f986cf8 in DirectoryManager::scanDirectory (this=0xffffc00d5b00) at /home/sre/debugging/main.cpp:29
29	            *ptr = 42; // This will cause a segmentation fault
(gdb) disassemble /m DirectoryManager::scanDirectory
Dump of assembler code for function _ZN16DirectoryManager13scanDirectoryEv:
15	    bool scanDirectory() {
   0x0000b6e90f986bf0 <+0>:	sub	sp, sp, #0xc0
   0x0000b6e90f986bf4 <+4>:	stp	x29, x30, [sp, #160]
   0x0000b6e90f986bf8 <+8>:	add	x29, sp, #0xa0
   0x0000b6e90f986bfc <+12>:	stp	x19, x20, [sp, #176]
   0x0000b6e90f986c00 <+16>:	str	x0, [sp, #8]
   0x0000b6e90f986c04 <+20>:	adrp	x0, 0xb6e90f9bf000
   0x0000b6e90f986c08 <+24>:	ldr	x0, [x0, #3992]
   0x0000b6e90f986c0c <+28>:	ldr	x1, [x0]
   0x0000b6e90f986c10 <+32>:	str	x1, [sp, #152]
   0x0000b6e90f986c14 <+36>:	mov	x1, #0x0                   	// #0

16	        try {
17	            boost::filesystem::path p(base_path_);
   0x0000b6e90f986c18 <+40>:	ldr	x1, [sp, #8]
   0x0000b6e90f986c1c <+44>:	add	x0, sp, #0x58
   0x0000b6e90f986c20 <+48>:	bl	0xb6e90f98658c <_ZN5boost10filesystem4pathC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>

18	            if (!boost::filesystem::exists(p)) {
   0x0000b6e90f986c24 <+52>:	add	x0, sp, #0x58
   0x0000b6e90f986c28 <+56>:	bl	0xb6e90f9869dc <_ZN5boost10filesystem6existsERKNS0_4pathE>
   0x0000b6e90f986c2c <+60>:	and	w0, w0, #0xff
   0x0000b6e90f986c30 <+64>:	eor	w0, w0, #0x1
   0x0000b6e90f986c34 <+68>:	and	w0, w0, #0xff
   0x0000b6e90f986c38 <+72>:	and	w0, w0, #0x1
   0x0000b6e90f986c3c <+76>:	cmp	w0, #0x0
   0x0000b6e90f986c40 <+80>:	b.eq	0xb6e90f986c88 <_ZN16DirectoryManager13scanDirectoryEv+152>  // b.none

19	                last_error_ = "Directory does not exist: " + base_path_;
   0x0000b6e90f986c44 <+84>:	ldr	x0, [sp, #8]
   0x0000b6e90f986c48 <+88>:	add	x19, x0, #0x28
   0x0000b6e90f986c4c <+92>:	ldr	x0, [sp, #8]
--Type <RET> for more, q to quit, c to continue without paging--q
Quit
(gdb) quit
sre@cpp:~/debugging/build$ 

=================================================================
sre@cpp:~/debugging/build$ gdb ./main ./core.186598 
GNU gdb (Ubuntu 15.0.50.20240403-0ubuntu1) 15.0.50.20240403-git
Copyright (C) 2024 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "aarch64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<https://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from ./main...
[New LWP 186598]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/aarch64-linux-gnu/libthread_db.so.1".
Core was generated by `./main'.
Program terminated with signal SIGSEGV, Segmentation fault.
#0  0x0000b6e90f986cf8 in DirectoryManager::scanDirectory (this=0xffffc00d5b00) at /home/sre/debugging/main.cpp:29
29	            *ptr = 42; // This will cause a segmentation fault
(gdb) info registers
x0             0x0                 0
x1             0x2a                42
x2             0x0                 0
x3             0x0                 0
x4             0xffffc00d5b19      281473903844121
x5             0xffffc00d59a1      281473903843745
x6             0x7365742f706d742f  8315180034107995183
x7             0x747365742f706d74  8391162080407874932
x8             0x4f                79
x9             0xefda548d0ab0      263721000438448
x10            0x34                52
x11            0x0                 0
x12            0xefda54bec270      263721003696752
x13            0xe                 14
x14            0x0                 0
x15            0xffffc00d5a98      281473903843992
x16            0xb6e90f9bfea0      201112105516704
x17            0xefda54801400      263720999588864
x18            0x6                 6
x19            0xffffc00d5ac0      281473903844032
x20            0xffffc00d5b10      281473903844112
x21            0xffffc00d5b10      281473903844112
x22            0xb6e90f985118      201112105275672
x23            0xffffc00d5ec8      281473903845064
x24            0xefda54bf2b58      263721003723608
x25            0x0                 0
x26            0xefda54bf3000      263721003724800
x27            0xb6e90f9bf5c0      201112105514432
x28            0x0                 0
x29            0xffffc00d59d0      281473903843792
x30            0xb6e90f986c90      201112105282704
sp             0xffffc00d5930      0xffffc00d5930
pc             0xb6e90f986cf8      0xb6e90f986cf8 <DirectoryManager::scanDirectory()+264>
--Type <RET> for more, q to quit, c to continue without paging--
cpsr           0x60000000          [ EL=0 BTYPE=0 C Z ]
fpsr           0x0                 [ ]
fpcr           0x0                 [ Len=0 Stride=0 RMode=0 ]
tpidr          0xefda54be4880      0xefda54be4880
tpidr2         0x0                 0x0
pauth_dmask    0x7f000000000000    35747322042253312
pauth_cmask    0x7f000000000000    35747322042253312
(gdb) x/i $pc
=> 0xb6e90f986cf8 <_ZN16DirectoryManager13scanDirectoryEv+264>:	str	w1, [x0]
(gdb) quit
sre@cpp:~/debugging/build$ 

